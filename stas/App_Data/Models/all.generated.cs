using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "c8168d1c6bb37591")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.2")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Master</summary>
	[PublishedContentModel("master")]
	public partial class Master : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "master";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Master(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Master, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Html Title: SEO: HTML Title
		///</summary>
		[ImplementPropertyType("htmlTitle")]
		public string HtmlTitle
		{
			get { return this.GetPropertyValue<string>("htmlTitle"); }
		}

		///<summary>
		/// Meta Description: SEO: Meta tags n description
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return this.GetPropertyValue<string>("metaDescription"); }
		}
	}

	/// <summary>Home</summary>
	[PublishedContentModel("home")]
	public partial class Home : Master, IFeaturedArtist, IFooter
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// about images: foto #1 om te tonen op de about sectie van de homepagina
		///</summary>
		[ImplementPropertyType("aboutImages")]
		public IEnumerable<IPublishedContent> AboutImages
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("aboutImages"); }
		}

		///<summary>
		/// AboutText: Text in de about sectie van de homepagina
		///</summary>
		[ImplementPropertyType("aboutText")]
		public IHtmlString AboutText
		{
			get { return this.GetPropertyValue<IHtmlString>("aboutText"); }
		}

		///<summary>
		/// About Title: title op de about us sectie van de home pagina
		///</summary>
		[ImplementPropertyType("aboutTitle")]
		public string AboutTitle
		{
			get { return this.GetPropertyValue<string>("aboutTitle"); }
		}

		///<summary>
		/// Contact Adres: Adres veld op de contact banner van de homepagina
		///</summary>
		[ImplementPropertyType("contactAdres")]
		public string ContactAdres
		{
			get { return this.GetPropertyValue<string>("contactAdres"); }
		}

		///<summary>
		/// Contact Email: Email op de contactbox van de homepagina
		///</summary>
		[ImplementPropertyType("contactEmail")]
		public string ContactEmail
		{
			get { return this.GetPropertyValue<string>("contactEmail"); }
		}

		///<summary>
		/// Contact Telefoon: Telefoon nummer op de de contact box van de homepagina
		///</summary>
		[ImplementPropertyType("contactTelefoon")]
		public string ContactTelefoon
		{
			get { return this.GetPropertyValue<string>("contactTelefoon"); }
		}

		///<summary>
		/// Contact Title: Title op de contact box op de home pagina
		///</summary>
		[ImplementPropertyType("contactTitle")]
		public string ContactTitle
		{
			get { return this.GetPropertyValue<string>("contactTitle"); }
		}

		///<summary>
		/// HomeBannerText: Bouncy text op de homepagina
		///</summary>
		[ImplementPropertyType("homeBannerText")]
		public string HomeBannerText
		{
			get { return this.GetPropertyValue<string>("homeBannerText"); }
		}

		///<summary>
		/// Home Landing Image: kies een foto om op de home pagina te tonen
		///</summary>
		[ImplementPropertyType("homeLandingImage")]
		public IPublishedContent HomeLandingImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("homeLandingImage"); }
		}

		///<summary>
		/// About Artist: write story about the artist here
		///</summary>
		[ImplementPropertyType("aboutArtist")]
		public IHtmlString AboutArtist
		{
			get { return Umbraco.Web.PublishedContentModels.FeaturedArtist.GetAboutArtist(this); }
		}

		///<summary>
		/// Artist Image: Add Image of the artist
		///</summary>
		[ImplementPropertyType("artistImage")]
		public IPublishedContent ArtistImage
		{
			get { return Umbraco.Web.PublishedContentModels.FeaturedArtist.GetArtistImage(this); }
		}

		///<summary>
		/// Artist Name: naam van de featured artist
		///</summary>
		[ImplementPropertyType("artistName")]
		public string ArtistName
		{
			get { return Umbraco.Web.PublishedContentModels.FeaturedArtist.GetArtistName(this); }
		}

		///<summary>
		/// Artist website: Enter website information about artist
		///</summary>
		[ImplementPropertyType("artistWebsite")]
		public Umbraco.Web.Models.RelatedLinks ArtistWebsite
		{
			get { return Umbraco.Web.PublishedContentModels.FeaturedArtist.GetArtistWebsite(this); }
		}

		///<summary>
		/// email: email for footer
		///</summary>
		[ImplementPropertyType("email")]
		public string Email
		{
			get { return Umbraco.Web.PublishedContentModels.Footer.GetEmail(this); }
		}

		///<summary>
		/// Facebook: stas facebook link
		///</summary>
		[ImplementPropertyType("facebook")]
		public string Facebook
		{
			get { return Umbraco.Web.PublishedContentModels.Footer.GetFacebook(this); }
		}

		///<summary>
		/// Phone number: telefoon nummer
		///</summary>
		[ImplementPropertyType("phoneNumber")]
		public string PhoneNumber
		{
			get { return Umbraco.Web.PublishedContentModels.Footer.GetPhoneNumber(this); }
		}

		///<summary>
		/// Vimeo: stas vimeo link
		///</summary>
		[ImplementPropertyType("vimeo")]
		public string Vimeo
		{
			get { return Umbraco.Web.PublishedContentModels.Footer.GetVimeo(this); }
		}
	}

	/// <summary>About STAS</summary>
	[PublishedContentModel("aboutUs")]
	public partial class AboutUs : Master, IBannerItems, ICtaBanner, ITitle
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "aboutUs";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public AboutUs(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<AboutUs, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// About Text kolom 1: het linker kolom met text van de about us pagina
		///</summary>
		[ImplementPropertyType("aboutTextCol1")]
		public IHtmlString AboutTextCol1
		{
			get { return this.GetPropertyValue<IHtmlString>("aboutTextCol1"); }
		}

		///<summary>
		/// about Text kolom 2: het rechter kolom met text van de about us pagina
		///</summary>
		[ImplementPropertyType("aboutTextCol2")]
		public IHtmlString AboutTextCol2
		{
			get { return this.GetPropertyValue<IHtmlString>("aboutTextCol2"); }
		}

		///<summary>
		/// Fotos Onder Banner: de foto's onder de banner op de about us pagina
		///</summary>
		[ImplementPropertyType("fotosOnderBanner")]
		public IEnumerable<IPublishedContent> FotosOnderBanner
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("fotosOnderBanner"); }
		}

		///<summary>
		/// Banner author: naam van author van de quote in de zwarte balk
		///</summary>
		[ImplementPropertyType("bannerAuthor")]
		public string BannerAuthor
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerAuthor(this); }
		}

		///<summary>
		/// Banner Image: Banner foto
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public IPublishedContent BannerImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerImage(this); }
		}

		///<summary>
		/// WitteBox: tekst om in de witte box op de banner te plaatsen
		///</summary>
		[ImplementPropertyType("witteBox")]
		public string WitteBox
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetWitteBox(this); }
		}

		///<summary>
		/// ZwarteText: text in zwarte box op banner
		///</summary>
		[ImplementPropertyType("zwarteText")]
		public string ZwarteText
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetZwarteText(this); }
		}

		///<summary>
		/// Contact link: link om naar de contact form te gaan
		///</summary>
		[ImplementPropertyType("contactLink")]
		public Umbraco.Web.Models.RelatedLinks ContactLink
		{
			get { return Umbraco.Web.PublishedContentModels.CtaBanner.GetContactLink(this); }
		}

		///<summary>
		/// cta Image: foto voor de call to action banner
		///</summary>
		[ImplementPropertyType("ctaImage")]
		public IPublishedContent CtaImage
		{
			get { return Umbraco.Web.PublishedContentModels.CtaBanner.GetCtaImage(this); }
		}

		///<summary>
		/// Subtitle: subtitle voor de title onder de banner
		///</summary>
		[ImplementPropertyType("subtitle")]
		public IHtmlString Subtitle
		{
			get { return Umbraco.Web.PublishedContentModels.Title.GetSubtitle(this); }
		}

		///<summary>
		/// Title: title onder banner
		///</summary>
		[ImplementPropertyType("titleText")]
		public string TitleText
		{
			get { return Umbraco.Web.PublishedContentModels.Title.GetTitleText(this); }
		}
	}

	/// <summary>Corporate Identities</summary>
	[PublishedContentModel("corporateIdentities")]
	public partial class CorporateIdentities : Master, IBannerItems, ITitle
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "corporateIdentities";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CorporateIdentities(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CorporateIdentities, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// bekijk Portfolio: link om portfolio te gaan bekijken
		///</summary>
		[ImplementPropertyType("bekijkPortfolio")]
		public Umbraco.Web.Models.RelatedLinks BekijkPortfolio
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("bekijkPortfolio"); }
		}

		///<summary>
		/// Black Box Text: de text inhoud van de zwarte box
		///</summary>
		[ImplementPropertyType("blackBoxText")]
		public IHtmlString BlackBoxText
		{
			get { return this.GetPropertyValue<IHtmlString>("blackBoxText"); }
		}

		///<summary>
		/// Black Box Title: Title van de zwarte box onder de text sectie
		///</summary>
		[ImplementPropertyType("blackBoxTitle")]
		public string BlackBoxTitle
		{
			get { return this.GetPropertyValue<string>("blackBoxTitle"); }
		}

		///<summary>
		/// Subtitle2: 2e subtitle
		///</summary>
		[ImplementPropertyType("subtitle2")]
		public string Subtitle2
		{
			get { return this.GetPropertyValue<string>("subtitle2"); }
		}

		///<summary>
		/// Subtitle3: 3e subtitle onder 3e title
		///</summary>
		[ImplementPropertyType("subtitle3")]
		public string Subtitle3
		{
			get { return this.GetPropertyValue<string>("subtitle3"); }
		}

		///<summary>
		/// text: text onder 1ste titel en subtitle
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return this.GetPropertyValue<IHtmlString>("text"); }
		}

		///<summary>
		/// text2: text onder 2e titel en subtitle
		///</summary>
		[ImplementPropertyType("text2")]
		public IHtmlString Text2
		{
			get { return this.GetPropertyValue<IHtmlString>("text2"); }
		}

		///<summary>
		/// text3: text onder 3e title en subtitle
		///</summary>
		[ImplementPropertyType("text3")]
		public IHtmlString Text3
		{
			get { return this.GetPropertyValue<IHtmlString>("text3"); }
		}

		///<summary>
		/// Title2: 2e title onder banner
		///</summary>
		[ImplementPropertyType("title2")]
		public string Title2
		{
			get { return this.GetPropertyValue<string>("title2"); }
		}

		///<summary>
		/// Title3: 3e title
		///</summary>
		[ImplementPropertyType("title3")]
		public string Title3
		{
			get { return this.GetPropertyValue<string>("title3"); }
		}

		///<summary>
		/// Banner author: naam van author van de quote in de zwarte balk
		///</summary>
		[ImplementPropertyType("bannerAuthor")]
		public string BannerAuthor
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerAuthor(this); }
		}

		///<summary>
		/// Banner Image: Banner foto
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public IPublishedContent BannerImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerImage(this); }
		}

		///<summary>
		/// WitteBox: tekst om in de witte box op de banner te plaatsen
		///</summary>
		[ImplementPropertyType("witteBox")]
		public string WitteBox
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetWitteBox(this); }
		}

		///<summary>
		/// ZwarteText: text in zwarte box op banner
		///</summary>
		[ImplementPropertyType("zwarteText")]
		public string ZwarteText
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetZwarteText(this); }
		}

		///<summary>
		/// Subtitle: subtitle voor de title onder de banner
		///</summary>
		[ImplementPropertyType("subtitle")]
		public IHtmlString Subtitle
		{
			get { return Umbraco.Web.PublishedContentModels.Title.GetSubtitle(this); }
		}

		///<summary>
		/// Title: title onder banner
		///</summary>
		[ImplementPropertyType("titleText")]
		public string TitleText
		{
			get { return Umbraco.Web.PublishedContentModels.Title.GetTitleText(this); }
		}
	}

	/// <summary>Graphic Design</summary>
	[PublishedContentModel("graphicDesign")]
	public partial class GraphicDesign : Master, IBannerItems, ICtaBanner, ITitle
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "graphicDesign";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GraphicDesign(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GraphicDesign, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Adobe CC: adobe CC title onder Adobe CC image
		///</summary>
		[ImplementPropertyType("adobeCC")]
		public string AdobeCC
		{
			get { return this.GetPropertyValue<string>("adobeCC"); }
		}

		///<summary>
		/// DTP: DTP onder dtp image
		///</summary>
		[ImplementPropertyType("dTP")]
		public string DTP
		{
			get { return this.GetPropertyValue<string>("dTP"); }
		}

		///<summary>
		/// Graphic Col links: linker kolom van graphics design text
		///</summary>
		[ImplementPropertyType("graphicColLinks")]
		public IHtmlString GraphicColLinks
		{
			get { return this.GetPropertyValue<IHtmlString>("graphicColLinks"); }
		}

		///<summary>
		/// Graphic Col Rechts: Rechter colom van graphic design text
		///</summary>
		[ImplementPropertyType("graphicColRechts")]
		public IHtmlString GraphicColRechts
		{
			get { return this.GetPropertyValue<IHtmlString>("graphicColRechts"); }
		}

		///<summary>
		/// Ontwerp: ontwerp title onder ontwerp image
		///</summary>
		[ImplementPropertyType("ontwerp")]
		public string Ontwerp
		{
			get { return this.GetPropertyValue<string>("ontwerp"); }
		}

		///<summary>
		/// Webdesign: webdesign title onder webdesign image
		///</summary>
		[ImplementPropertyType("webdesign")]
		public string Webdesign
		{
			get { return this.GetPropertyValue<string>("webdesign"); }
		}

		///<summary>
		/// Banner author: naam van author van de quote in de zwarte balk
		///</summary>
		[ImplementPropertyType("bannerAuthor")]
		public string BannerAuthor
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerAuthor(this); }
		}

		///<summary>
		/// Banner Image: Banner foto
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public IPublishedContent BannerImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerImage(this); }
		}

		///<summary>
		/// WitteBox: tekst om in de witte box op de banner te plaatsen
		///</summary>
		[ImplementPropertyType("witteBox")]
		public string WitteBox
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetWitteBox(this); }
		}

		///<summary>
		/// ZwarteText: text in zwarte box op banner
		///</summary>
		[ImplementPropertyType("zwarteText")]
		public string ZwarteText
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetZwarteText(this); }
		}

		///<summary>
		/// Contact link: link om naar de contact form te gaan
		///</summary>
		[ImplementPropertyType("contactLink")]
		public Umbraco.Web.Models.RelatedLinks ContactLink
		{
			get { return Umbraco.Web.PublishedContentModels.CtaBanner.GetContactLink(this); }
		}

		///<summary>
		/// cta Image: foto voor de call to action banner
		///</summary>
		[ImplementPropertyType("ctaImage")]
		public IPublishedContent CtaImage
		{
			get { return Umbraco.Web.PublishedContentModels.CtaBanner.GetCtaImage(this); }
		}

		///<summary>
		/// Subtitle: subtitle voor de title onder de banner
		///</summary>
		[ImplementPropertyType("subtitle")]
		public IHtmlString Subtitle
		{
			get { return Umbraco.Web.PublishedContentModels.Title.GetSubtitle(this); }
		}

		///<summary>
		/// Title: title onder banner
		///</summary>
		[ImplementPropertyType("titleText")]
		public string TitleText
		{
			get { return Umbraco.Web.PublishedContentModels.Title.GetTitleText(this); }
		}
	}

	/// <summary>Film Video</summary>
	[PublishedContentModel("filmVideo")]
	public partial class FilmVideo : Master, IBannerItems, ICtaBanner, ITitle
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "filmVideo";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FilmVideo(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FilmVideo, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Film Text Col 1: linker text kolom voor film pagina
		///</summary>
		[ImplementPropertyType("filmTextCol1")]
		public IHtmlString FilmTextCol1
		{
			get { return this.GetPropertyValue<IHtmlString>("filmTextCol1"); }
		}

		///<summary>
		/// Film Text col 2: rechter Text kolom film pagina
		///</summary>
		[ImplementPropertyType("filmTextCol2")]
		public IHtmlString FilmTextCol2
		{
			get { return this.GetPropertyValue<IHtmlString>("filmTextCol2"); }
		}

		///<summary>
		/// Banner author: naam van author van de quote in de zwarte balk
		///</summary>
		[ImplementPropertyType("bannerAuthor")]
		public string BannerAuthor
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerAuthor(this); }
		}

		///<summary>
		/// Banner Image: Banner foto
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public IPublishedContent BannerImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerImage(this); }
		}

		///<summary>
		/// WitteBox: tekst om in de witte box op de banner te plaatsen
		///</summary>
		[ImplementPropertyType("witteBox")]
		public string WitteBox
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetWitteBox(this); }
		}

		///<summary>
		/// ZwarteText: text in zwarte box op banner
		///</summary>
		[ImplementPropertyType("zwarteText")]
		public string ZwarteText
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetZwarteText(this); }
		}

		///<summary>
		/// Contact link: link om naar de contact form te gaan
		///</summary>
		[ImplementPropertyType("contactLink")]
		public Umbraco.Web.Models.RelatedLinks ContactLink
		{
			get { return Umbraco.Web.PublishedContentModels.CtaBanner.GetContactLink(this); }
		}

		///<summary>
		/// cta Image: foto voor de call to action banner
		///</summary>
		[ImplementPropertyType("ctaImage")]
		public IPublishedContent CtaImage
		{
			get { return Umbraco.Web.PublishedContentModels.CtaBanner.GetCtaImage(this); }
		}

		///<summary>
		/// Subtitle: subtitle voor de title onder de banner
		///</summary>
		[ImplementPropertyType("subtitle")]
		public IHtmlString Subtitle
		{
			get { return Umbraco.Web.PublishedContentModels.Title.GetSubtitle(this); }
		}

		///<summary>
		/// Title: title onder banner
		///</summary>
		[ImplementPropertyType("titleText")]
		public string TitleText
		{
			get { return Umbraco.Web.PublishedContentModels.Title.GetTitleText(this); }
		}
	}

	/// <summary>Events</summary>
	[PublishedContentModel("events")]
	public partial class Events : Master, IBannerItems, ITitle
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "events";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Events(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Events, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Concept Text: Text voor concept Item
		///</summary>
		[ImplementPropertyType("conceptText")]
		public IHtmlString ConceptText
		{
			get { return this.GetPropertyValue<IHtmlString>("conceptText"); }
		}

		///<summary>
		/// Concept Title: Title voor concept Item
		///</summary>
		[ImplementPropertyType("conceptTitle")]
		public string ConceptTitle
		{
			get { return this.GetPropertyValue<string>("conceptTitle"); }
		}

		///<summary>
		/// Logistiek Text: Text voor logistiek Item
		///</summary>
		[ImplementPropertyType("logistiekText")]
		public IHtmlString LogistiekText
		{
			get { return this.GetPropertyValue<IHtmlString>("logistiekText"); }
		}

		///<summary>
		/// Logistiek Title: text voor logistiek item
		///</summary>
		[ImplementPropertyType("logistiekTitle")]
		public string LogistiekTitle
		{
			get { return this.GetPropertyValue<string>("logistiekTitle"); }
		}

		///<summary>
		/// Pers Text: Text voor pers Item
		///</summary>
		[ImplementPropertyType("persText")]
		public IHtmlString PersText
		{
			get { return this.GetPropertyValue<IHtmlString>("persText"); }
		}

		///<summary>
		/// Pers Title: Title voor pers item
		///</summary>
		[ImplementPropertyType("persTitle")]
		public string PersTitle
		{
			get { return this.GetPropertyValue<string>("persTitle"); }
		}

		///<summary>
		/// Banner author: naam van author van de quote in de zwarte balk
		///</summary>
		[ImplementPropertyType("bannerAuthor")]
		public string BannerAuthor
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerAuthor(this); }
		}

		///<summary>
		/// Banner Image: Banner foto
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public IPublishedContent BannerImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerImage(this); }
		}

		///<summary>
		/// WitteBox: tekst om in de witte box op de banner te plaatsen
		///</summary>
		[ImplementPropertyType("witteBox")]
		public string WitteBox
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetWitteBox(this); }
		}

		///<summary>
		/// ZwarteText: text in zwarte box op banner
		///</summary>
		[ImplementPropertyType("zwarteText")]
		public string ZwarteText
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetZwarteText(this); }
		}

		///<summary>
		/// Subtitle: subtitle voor de title onder de banner
		///</summary>
		[ImplementPropertyType("subtitle")]
		public IHtmlString Subtitle
		{
			get { return Umbraco.Web.PublishedContentModels.Title.GetSubtitle(this); }
		}

		///<summary>
		/// Title: title onder banner
		///</summary>
		[ImplementPropertyType("titleText")]
		public string TitleText
		{
			get { return Umbraco.Web.PublishedContentModels.Title.GetTitleText(this); }
		}
	}

	/// <summary>Portfolio</summary>
	[PublishedContentModel("portfolio")]
	public partial class Portfolio : Master, IBannerItems
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "portfolio";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Portfolio(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Portfolio, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner author: naam van author van de quote in de zwarte balk
		///</summary>
		[ImplementPropertyType("bannerAuthor")]
		public string BannerAuthor
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerAuthor(this); }
		}

		///<summary>
		/// Banner Image: Banner foto
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public IPublishedContent BannerImage
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetBannerImage(this); }
		}

		///<summary>
		/// WitteBox: tekst om in de witte box op de banner te plaatsen
		///</summary>
		[ImplementPropertyType("witteBox")]
		public string WitteBox
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetWitteBox(this); }
		}

		///<summary>
		/// ZwarteText: text in zwarte box op banner
		///</summary>
		[ImplementPropertyType("zwarteText")]
		public string ZwarteText
		{
			get { return Umbraco.Web.PublishedContentModels.BannerItems.GetZwarteText(this); }
		}
	}

	/// <summary>PortfolioDetail</summary>
	[PublishedContentModel("portfolioDetail")]
	public partial class PortfolioDetail : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "portfolioDetail";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PortfolioDetail(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PortfolioDetail, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	// Mixin content Type 1130 with alias "bannerItems"
	/// <summary>Banner Items</summary>
	public partial interface IBannerItems : IPublishedContent
	{
		/// <summary>Banner author</summary>
		string BannerAuthor { get; }

		/// <summary>Banner Image</summary>
		IPublishedContent BannerImage { get; }

		/// <summary>WitteBox</summary>
		string WitteBox { get; }

		/// <summary>ZwarteText</summary>
		string ZwarteText { get; }
	}

	/// <summary>Banner Items</summary>
	[PublishedContentModel("bannerItems")]
	public partial class BannerItems : PublishedContentModel, IBannerItems
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "bannerItems";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BannerItems(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BannerItems, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner author: naam van author van de quote in de zwarte balk
		///</summary>
		[ImplementPropertyType("bannerAuthor")]
		public string BannerAuthor
		{
			get { return GetBannerAuthor(this); }
		}

		/// <summary>Static getter for Banner author</summary>
		public static string GetBannerAuthor(IBannerItems that) { return that.GetPropertyValue<string>("bannerAuthor"); }

		///<summary>
		/// Banner Image: Banner foto
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public IPublishedContent BannerImage
		{
			get { return GetBannerImage(this); }
		}

		/// <summary>Static getter for Banner Image</summary>
		public static IPublishedContent GetBannerImage(IBannerItems that) { return that.GetPropertyValue<IPublishedContent>("bannerImage"); }

		///<summary>
		/// WitteBox: tekst om in de witte box op de banner te plaatsen
		///</summary>
		[ImplementPropertyType("witteBox")]
		public string WitteBox
		{
			get { return GetWitteBox(this); }
		}

		/// <summary>Static getter for WitteBox</summary>
		public static string GetWitteBox(IBannerItems that) { return that.GetPropertyValue<string>("witteBox"); }

		///<summary>
		/// ZwarteText: text in zwarte box op banner
		///</summary>
		[ImplementPropertyType("zwarteText")]
		public string ZwarteText
		{
			get { return GetZwarteText(this); }
		}

		/// <summary>Static getter for ZwarteText</summary>
		public static string GetZwarteText(IBannerItems that) { return that.GetPropertyValue<string>("zwarteText"); }
	}

	// Mixin content Type 1132 with alias "title"
	/// <summary>Title</summary>
	public partial interface ITitle : IPublishedContent
	{
		/// <summary>Subtitle</summary>
		IHtmlString Subtitle { get; }

		/// <summary>Title</summary>
		string TitleText { get; }
	}

	/// <summary>Title</summary>
	[PublishedContentModel("title")]
	public partial class Title : PublishedContentModel, ITitle
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "title";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Title(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Title, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Subtitle: subtitle voor de title onder de banner
		///</summary>
		[ImplementPropertyType("subtitle")]
		public IHtmlString Subtitle
		{
			get { return GetSubtitle(this); }
		}

		/// <summary>Static getter for Subtitle</summary>
		public static IHtmlString GetSubtitle(ITitle that) { return that.GetPropertyValue<IHtmlString>("subtitle"); }

		///<summary>
		/// Title: title onder banner
		///</summary>
		[ImplementPropertyType("titleText")]
		public string TitleText
		{
			get { return GetTitleText(this); }
		}

		/// <summary>Static getter for Title</summary>
		public static string GetTitleText(ITitle that) { return that.GetPropertyValue<string>("titleText"); }
	}

	// Mixin content Type 2141 with alias "ctaBanner"
	/// <summary>cta Banner</summary>
	public partial interface ICtaBanner : IPublishedContent
	{
		/// <summary>Contact link</summary>
		Umbraco.Web.Models.RelatedLinks ContactLink { get; }

		/// <summary>cta Image</summary>
		IPublishedContent CtaImage { get; }
	}

	/// <summary>cta Banner</summary>
	[PublishedContentModel("ctaBanner")]
	public partial class CtaBanner : PublishedContentModel, ICtaBanner
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "ctaBanner";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CtaBanner(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CtaBanner, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contact link: link om naar de contact form te gaan
		///</summary>
		[ImplementPropertyType("contactLink")]
		public Umbraco.Web.Models.RelatedLinks ContactLink
		{
			get { return GetContactLink(this); }
		}

		/// <summary>Static getter for Contact link</summary>
		public static Umbraco.Web.Models.RelatedLinks GetContactLink(ICtaBanner that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("contactLink"); }

		///<summary>
		/// cta Image: foto voor de call to action banner
		///</summary>
		[ImplementPropertyType("ctaImage")]
		public IPublishedContent CtaImage
		{
			get { return GetCtaImage(this); }
		}

		/// <summary>Static getter for cta Image</summary>
		public static IPublishedContent GetCtaImage(ICtaBanner that) { return that.GetPropertyValue<IPublishedContent>("ctaImage"); }
	}

	// Mixin content Type 2143 with alias "footer"
	/// <summary>footer</summary>
	public partial interface IFooter : IPublishedContent
	{
		/// <summary>email</summary>
		string Email { get; }

		/// <summary>Facebook</summary>
		string Facebook { get; }

		/// <summary>Phone number</summary>
		string PhoneNumber { get; }

		/// <summary>Vimeo</summary>
		string Vimeo { get; }
	}

	/// <summary>footer</summary>
	[PublishedContentModel("footer")]
	public partial class Footer : PublishedContentModel, IFooter
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "footer";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Footer(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Footer, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// email: email for footer
		///</summary>
		[ImplementPropertyType("email")]
		public string Email
		{
			get { return GetEmail(this); }
		}

		/// <summary>Static getter for email</summary>
		public static string GetEmail(IFooter that) { return that.GetPropertyValue<string>("email"); }

		///<summary>
		/// Facebook: stas facebook link
		///</summary>
		[ImplementPropertyType("facebook")]
		public string Facebook
		{
			get { return GetFacebook(this); }
		}

		/// <summary>Static getter for Facebook</summary>
		public static string GetFacebook(IFooter that) { return that.GetPropertyValue<string>("facebook"); }

		///<summary>
		/// Phone number: telefoon nummer
		///</summary>
		[ImplementPropertyType("phoneNumber")]
		public string PhoneNumber
		{
			get { return GetPhoneNumber(this); }
		}

		/// <summary>Static getter for Phone number</summary>
		public static string GetPhoneNumber(IFooter that) { return that.GetPropertyValue<string>("phoneNumber"); }

		///<summary>
		/// Vimeo: stas vimeo link
		///</summary>
		[ImplementPropertyType("vimeo")]
		public string Vimeo
		{
			get { return GetVimeo(this); }
		}

		/// <summary>Static getter for Vimeo</summary>
		public static string GetVimeo(IFooter that) { return that.GetPropertyValue<string>("vimeo"); }
	}

	// Mixin content Type 2152 with alias "featuredArtist"
	/// <summary>Featured Artist</summary>
	public partial interface IFeaturedArtist : IPublishedContent
	{
		/// <summary>About Artist</summary>
		IHtmlString AboutArtist { get; }

		/// <summary>Artist Image</summary>
		IPublishedContent ArtistImage { get; }

		/// <summary>Artist Name</summary>
		string ArtistName { get; }

		/// <summary>Artist website</summary>
		Umbraco.Web.Models.RelatedLinks ArtistWebsite { get; }
	}

	/// <summary>Featured Artist</summary>
	[PublishedContentModel("featuredArtist")]
	public partial class FeaturedArtist : PublishedContentModel, IFeaturedArtist
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "featuredArtist";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FeaturedArtist(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FeaturedArtist, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// About Artist: write story about the artist here
		///</summary>
		[ImplementPropertyType("aboutArtist")]
		public IHtmlString AboutArtist
		{
			get { return GetAboutArtist(this); }
		}

		/// <summary>Static getter for About Artist</summary>
		public static IHtmlString GetAboutArtist(IFeaturedArtist that) { return that.GetPropertyValue<IHtmlString>("aboutArtist"); }

		///<summary>
		/// Artist Image: Add Image of the artist
		///</summary>
		[ImplementPropertyType("artistImage")]
		public IPublishedContent ArtistImage
		{
			get { return GetArtistImage(this); }
		}

		/// <summary>Static getter for Artist Image</summary>
		public static IPublishedContent GetArtistImage(IFeaturedArtist that) { return that.GetPropertyValue<IPublishedContent>("artistImage"); }

		///<summary>
		/// Artist Name: naam van de featured artist
		///</summary>
		[ImplementPropertyType("artistName")]
		public string ArtistName
		{
			get { return GetArtistName(this); }
		}

		/// <summary>Static getter for Artist Name</summary>
		public static string GetArtistName(IFeaturedArtist that) { return that.GetPropertyValue<string>("artistName"); }

		///<summary>
		/// Artist website: Enter website information about artist
		///</summary>
		[ImplementPropertyType("artistWebsite")]
		public Umbraco.Web.Models.RelatedLinks ArtistWebsite
		{
			get { return GetArtistWebsite(this); }
		}

		/// <summary>Static getter for Artist website</summary>
		public static Umbraco.Web.Models.RelatedLinks GetArtistWebsite(IFeaturedArtist that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("artistWebsite"); }
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public string UmbracoFile
		{
			get { return this.GetPropertyValue<string>("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
